services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
      # 环境变量: 与Dockerfile中的ARG字段相同
      args:
        VERSION: pre
        CGOENABLED: 0
        GOOS: linux
        GOARCH: arm64
        GOIMAGE: golang:1.23.3-alpine3.20
        REPOSITORY: "lisa/backend"
        HTTP_PORT: 30001
        GRPC_PORT: 30002
    # platform: linux/arm64
    ports:
      - "30001:30001"
      - "30002:30002"
    depends_on:
      - postgres17
      - redis7
    container_name: api
    restart: always
    environment:
      - GIN_MODE=release
      - DB_SOURCE=postgresql://postgres:postgres@postgres17:5432/simple_bank?sslmode=disable
      - REDIS_ADDRESS=redis7:6379
    volumes:
      - ./app.env:/bin/app.env
      #      - # 初始化数据库
      #        init_database.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    command:
      - "/bin/main"
    networks:
      - app

  postgres17:
    image: postgres:17-alpine3.20
    ports:
      - "5432:5432"
    container_name: postgres17
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=simple_bank
    networks:
      - app
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "simple_bank", "-h", "localhost" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis7:
    image: redis:7.4.1-alpine
    restart: always
    container_name: redis7
    ports:
      - "6379:6379"
    networks:
      - app
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

networks:
  app:
    name: app-network
