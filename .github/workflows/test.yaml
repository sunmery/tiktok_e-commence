name: Test Microservices

on:
  push:
    branches:
      - pre
      - main
    tags:
      - 'v*.*.*'

jobs:
  backend-test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        service: [addresses, balances, cart, checkout, credit_cards, order, payment, product, user]  # 并行执行多个服务
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.service }}
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - '5432:5432'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          check-latest: true
          cache-dependency-path: '**/go.sum'

      - name: Install migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate

      - name: Run database migration
        run: |
          export DB_SOURCE="postgresql://postgres:postgres@localhost:5432/postgres?sslmode=disable"
          if [ -d ${{ matrix.service }} ]; then
            echo "Running migrations..."
            make migrate-up
          else
            echo "Skipping migrations."
          fi

      - name: Run Go tests
        run: |
          go test -short -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html
