# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/cart:
        post:
            tags:
                - CartService
            operationId: CartService_AddItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.cart.v1.AddItemReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.cart.v1.AddItemResp'
    /v1/cart/{user_id}:
        get:
            tags:
                - CartService
            operationId: CartService_GetCart
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.cart.v1.GetCartResp'
        delete:
            tags:
                - CartService
            operationId: CartService_EmptyCart
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.cart.v1.EmptyCartResp'
    /v1/order:
        get:
            tags:
                - OrderService
            description: 列出订单
            operationId: OrderService_ListOrder
            parameters:
                - name: user_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.ListOrderResp'
        post:
            tags:
                - OrderService
            description: 创建订单
            operationId: OrderService_PlaceOrder
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.order.v1.PlaceOrderReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.PlaceOrderResp'
    /v1/order/mark:
        post:
            tags:
                - OrderService
            description: 支付订单
            operationId: OrderService_MarkOrderPaid
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.order.v1.MarkOrderPaidReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.MarkOrderPaidResp'
    /v1/products:
        get:
            tags:
                - ProductCatalogService
            operationId: ProductCatalogService_ListProducts
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  schema:
                    type: string
                - name: category_name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.product.v1.ListProductsResp'
        post:
            tags:
                - ProductCatalogService
            operationId: ProductCatalogService_CreateProduct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.product.v1.CreateProductRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.product.v1.CreateProductReply'
    /v1/products/search/{query}:
        get:
            tags:
                - ProductCatalogService
            operationId: ProductCatalogService_SearchProducts
            parameters:
                - name: query
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.product.v1.SearchProductsResp'
    /v1/products/{id}:
        get:
            tags:
                - ProductCatalogService
            operationId: ProductCatalogService_GetProduct
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.product.v1.GetProductResp'
components:
    schemas:
        api.cart.v1.AddItemReq:
            type: object
            properties:
                user_id:
                    type: string
                item:
                    $ref: '#/components/schemas/api.cart.v1.CartItem'
        api.cart.v1.AddItemResp:
            type: object
            properties: {}
        api.cart.v1.Cart:
            type: object
            properties:
                user_id:
                    type: string
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.cart.v1.CartItem'
        api.cart.v1.CartItem:
            type: object
            properties:
                product_id:
                    type: integer
                    format: uint32
                quantity:
                    type: integer
                    format: int32
        api.cart.v1.EmptyCartResp:
            type: object
            properties: {}
        api.cart.v1.GetCartResp:
            type: object
            properties:
                cart:
                    $ref: '#/components/schemas/api.cart.v1.Cart'
        api.order.v1.Address:
            type: object
            properties:
                streetAddress:
                    type: string
                city:
                    type: string
                state:
                    type: string
                country:
                    type: string
                zipCode:
                    type: integer
                    format: int32
        api.order.v1.ListOrderResp:
            type: object
            properties:
                orders:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.v1.Order'
        api.order.v1.MarkOrderPaidReq:
            type: object
            properties:
                user_id:
                    type: string
                order_id:
                    type: string
        api.order.v1.MarkOrderPaidResp:
            type: object
            properties: {}
        api.order.v1.Order:
            type: object
            properties:
                order_items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.v1.OrderItem'
                order_id:
                    type: string
                user_id:
                    type: string
                user_currency:
                    type: string
                address:
                    $ref: '#/components/schemas/api.order.v1.Address'
                email:
                    type: string
                created_at:
                    type: integer
                    format: int32
        api.order.v1.OrderItem:
            type: object
            properties:
                item:
                    $ref: '#/components/schemas/api.cart.v1.CartItem'
                cost:
                    type: number
                    format: float
        api.order.v1.OrderResult:
            type: object
            properties:
                order_id:
                    type: string
        api.order.v1.PlaceOrderReq:
            type: object
            properties:
                user_id:
                    type: string
                user_currency:
                    type: string
                address:
                    $ref: '#/components/schemas/api.order.v1.Address'
                email:
                    type: string
                order_items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.v1.OrderItem'
        api.order.v1.PlaceOrderResp:
            type: object
            properties:
                order:
                    $ref: '#/components/schemas/api.order.v1.OrderResult'
        api.product.v1.CreateProductReply:
            type: object
            properties:
                product:
                    $ref: '#/components/schemas/api.product.v1.Product'
        api.product.v1.CreateProductRequest:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                picture:
                    type: string
                price:
                    type: number
                    format: float
                categories:
                    type: array
                    items:
                        type: string
        api.product.v1.GetProductResp:
            type: object
            properties:
                product:
                    $ref: '#/components/schemas/api.product.v1.Product'
        api.product.v1.ListProductsResp:
            type: object
            properties:
                products:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.product.v1.Product'
        api.product.v1.Product:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                picture:
                    type: string
                price:
                    type: number
                    format: float
                categories:
                    type: array
                    items:
                        type: string
        api.product.v1.SearchProductsResp:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.product.v1.Product'
tags:
    - name: CartService
    - name: OrderService
    - name: ProductCatalogService
