# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/cart:
        post:
            tags:
                - CartService
            operationId: CartService_AddItem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.order.v1.AddItemReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.AddItemResp'
    /v1/cart/{name}:
        get:
            tags:
                - CartService
            operationId: CartService_GetCart
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: owner
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.GetCartResp'
        delete:
            tags:
                - CartService
            operationId: CartService_EmptyCart
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: owner
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.EmptyCartResp'
    /v1/checkout:
        post:
            tags:
                - CheckoutService
            operationId: CheckoutService_Checkout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.checkout.v1.CheckoutReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.checkout.v1.CheckoutResp'
    /v1/credit_cards:
        post:
            tags:
                - CreditCardsService
            operationId: CreditCardsService_CreateCreditCard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.credit_cards.v1.CreditCards'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.credit_cards.v1.CardsReply'
        patch:
            tags:
                - CreditCardsService
            operationId: CreditCardsService_UpdateCreditCard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.credit_cards.v1.CreditCards'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.credit_cards.v1.CardsReply'
    /v1/credit_cards/all:
        get:
            tags:
                - CreditCardsService
            operationId: CreditCardsService_ListCreditCards
            parameters:
                - name: owner
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.credit_cards.v1.ListCreditCardsReply'
    /v1/credit_cards/{credit_card_number}:
        get:
            tags:
                - CreditCardsService
            operationId: CreditCardsService_GetCreditCard
            parameters:
                - name: credit_card_number
                  in: path
                  required: true
                  schema:
                    type: string
                - name: owner
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.credit_cards.v1.GetCreditCardsReply'
    /v1/credit_cards/{id}:
        delete:
            tags:
                - CreditCardsService
            operationId: CreditCardsService_DeleteCreditCard
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.credit_cards.v1.CardsReply'
    /v1/orders:
        get:
            tags:
                - OrderService
            description: 列出订单
            operationId: OrderService_ListOrder
            parameters:
                - name: owner
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.ListOrderResp'
        post:
            tags:
                - OrderService
            description: 创建订单
            operationId: OrderService_PlaceOrder
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.order.v1.PlaceOrderReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.PlaceOrderResp'
        patch:
            tags:
                - OrderService
            description: 支付已支付的订单
            operationId: OrderService_MarkOrderPaid
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.order.v1.MarkOrderPaidReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.order.v1.MarkOrderPaidResp'
    /v1/payments:
        post:
            tags:
                - PaymentService
            operationId: PaymentService_Charge
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.payment.v1.ChargeReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.payment.v1.ChargeResp'
components:
    schemas:
        api.checkout.v1.CheckoutReq:
            type: object
            properties:
                owner:
                    type: string
                name:
                    type: string
                email:
                    type: string
                addressId:
                    type: integer
                    format: int32
                creditCardId:
                    type: integer
                    format: int32
        api.checkout.v1.CheckoutResp:
            type: object
            properties:
                orderId:
                    type: integer
                    format: uint32
                transactionId:
                    type: integer
                    format: uint32
        api.credit_cards.v1.CardsReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
        api.credit_cards.v1.CreditCards:
            type: object
            properties:
                credit_card_number:
                    type: string
                credit_card_cvv:
                    type: string
                credit_card_expiration_year:
                    type: string
                credit_card_expiration_month:
                    type: string
                owner:
                    type: string
                name:
                    type: string
                id:
                    type: integer
                    format: uint32
        api.credit_cards.v1.GetCreditCardsReply:
            type: object
            properties:
                credit_cards:
                    $ref: '#/components/schemas/api.credit_cards.v1.CreditCards'
        api.credit_cards.v1.ListCreditCardsReply:
            type: object
            properties:
                credit_cards:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.credit_cards.v1.CreditCards'
        api.order.v1.AddItemReq:
            type: object
            properties:
                name:
                    type: string
                owner:
                    type: string
                item:
                    $ref: '#/components/schemas/api.order.v1.CartItem'
        api.order.v1.AddItemResp:
            type: object
            properties: {}
        api.order.v1.Cart:
            type: object
            properties:
                name:
                    type: string
                owner:
                    type: string
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.v1.CartItem'
        api.order.v1.CartItem:
            type: object
            properties:
                product_id:
                    type: integer
                    format: uint32
                quantity:
                    type: integer
                    format: uint32
        api.order.v1.EmptyCartResp:
            type: object
            properties: {}
        api.order.v1.GetCartResp:
            type: object
            properties:
                cart:
                    $ref: '#/components/schemas/api.order.v1.Cart'
        api.order.v1.ListOrderResp:
            type: object
            properties:
                orders:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.v1.Order'
        api.order.v1.MarkOrderPaidReq:
            type: object
            properties:
                owner:
                    type: string
                name:
                    type: string
                order_id:
                    type: integer
                    format: uint32
        api.order.v1.MarkOrderPaidResp:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
                message:
                    type: string
        api.order.v1.Order:
            type: object
            properties:
                owner:
                    type: string
                name:
                    type: string
                email:
                    type: string
                currency:
                    type: string
                order_id:
                    type: integer
                    format: uint32
                addressId:
                    type: integer
                    format: uint32
                order_items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.v1.OrderItem'
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time
        api.order.v1.OrderItem:
            type: object
            properties:
                item:
                    $ref: '#/components/schemas/api.order.v1.CartItem'
                cost:
                    type: number
                    format: float
        api.order.v1.OrderResult:
            type: object
            properties:
                order_id:
                    type: integer
                    format: uint32
        api.order.v1.PlaceOrderReq:
            type: object
            properties:
                owner:
                    type: string
                name:
                    type: string
                currency:
                    type: string
                address_id:
                    type: integer
                    format: uint32
                email:
                    type: string
                order_items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.order.v1.OrderItem'
        api.order.v1.PlaceOrderResp:
            type: object
            properties:
                order:
                    $ref: '#/components/schemas/api.order.v1.OrderResult'
        api.payment.v1.ChargeReq:
            type: object
            properties:
                amount:
                    type: number
                    format: double
                credit_card:
                    $ref: '#/components/schemas/api.payment.v1.CreditCardInfo'
                order_id:
                    type: integer
                    format: uint32
                owner:
                    type: string
                name:
                    type: string
        api.payment.v1.ChargeResp:
            type: object
            properties:
                transactionId:
                    type: integer
                    format: uint32
        api.payment.v1.CreditCardInfo:
            type: object
            properties:
                number:
                    type: string
                cvv:
                    type: string
                expiration_year:
                    type: string
                expiration_month:
                    type: string
tags:
    - name: CartService
    - name: CheckoutService
    - name: CreditCardsService
    - name: OrderService
    - name: PaymentService
