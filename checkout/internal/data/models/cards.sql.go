// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: cards.sql

package models

import (
	"context"
)

const CreateCreditCard = `-- name: CreateCreditCard :one
INSERT INTO credit_cards.credit_cards(credit_card_number, credit_card_cvv, credit_card_expiration_year,
                                      credit_card_expiration_month)
VALUES ($1, $2, $3, $4)
RETURNING id, credit_card_number, credit_card_cvv, credit_card_expiration_year, credit_card_expiration_month
`

type CreateCreditCardParams struct {
	CreditCardNumber          string `json:"creditCardNumber"`
	CreditCardCvv             int32  `json:"creditCardCvv"`
	CreditCardExpirationYear  int32  `json:"creditCardExpirationYear"`
	CreditCardExpirationMonth int32  `json:"creditCardExpirationMonth"`
}

// CreateCreditCard
//
//	INSERT INTO credit_cards.credit_cards(credit_card_number, credit_card_cvv, credit_card_expiration_year,
//	                                      credit_card_expiration_month)
//	VALUES ($1, $2, $3, $4)
//	RETURNING id, credit_card_number, credit_card_cvv, credit_card_expiration_year, credit_card_expiration_month
func (q *Queries) CreateCreditCard(ctx context.Context, arg CreateCreditCardParams) (CreditCardsCreditCards, error) {
	row := q.db.QueryRow(ctx, CreateCreditCard,
		arg.CreditCardNumber,
		arg.CreditCardCvv,
		arg.CreditCardExpirationYear,
		arg.CreditCardExpirationMonth,
	)
	var i CreditCardsCreditCards
	err := row.Scan(
		&i.ID,
		&i.CreditCardNumber,
		&i.CreditCardCvv,
		&i.CreditCardExpirationYear,
		&i.CreditCardExpirationMonth,
	)
	return i, err
}
