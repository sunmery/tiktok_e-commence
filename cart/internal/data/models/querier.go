// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package models

import (
	"context"
)

type Querier interface {
	//CreateOrUpdateCartItem
	//
	//  WITH existing_item AS (SELECT id
	//                         FROM carts.cart_items
	//                         WHERE owner = $1
	//                           AND name = $2
	//                           AND product_id = 1)
	//  INSERT
	//  INTO carts.cart_items (owner, name, product_id, quantity)
	//  VALUES ($1, $2, $3, $4)
	//  ON CONFLICT (owner, name, product_id) DO UPDATE
	//      SET quantity   = carts.cart_items.quantity + EXCLUDED.quantity,
	//          updated_at = now()
	//  RETURNING id, owner, name, product_id, quantity, created_at, updated_at
	CreateOrUpdateCartItem(ctx context.Context, arg CreateOrUpdateCartItemParams) (CartsCartItems, error)
	//DeleteCart
	//
	//  DELETE
	//  FROM carts.cart_items
	//  WHERE owner = $1
	//    AND name = $2
	//  RETURNING id, owner, name, product_id, quantity, created_at, updated_at
	DeleteCart(ctx context.Context, arg DeleteCartParams) (CartsCartItems, error)
	//DeleteCartItem
	//
	//  DELETE
	//  FROM carts.cart_items
	//  WHERE owner = $1
	//    AND name = $2
	//    AND product_id = $3
	//  RETURNING id, owner, name, product_id, quantity, created_at, updated_at
	DeleteCartItem(ctx context.Context, arg DeleteCartItemParams) (CartsCartItems, error)
	//GetCart
	//
	//  SELECT p.description,
	//         p.price,
	//         p.picture,
	//         p.categories,
	//         ci.product_id,
	//         ci.quantity
	//  FROM carts.cart_items ci
	//           INNER JOIN
	//       products.products p
	//       ON ci.product_id = p.id
	//  WHERE ci.owner = $1
	//    AND ci.name = $2
	//  ORDER BY ci.created_at
	GetCart(ctx context.Context, arg GetCartParams) ([]GetCartRow, error)
}

var _ Querier = (*Queries)(nil)
