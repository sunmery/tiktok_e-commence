// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package models

import (
	"context"
)

type Querier interface {
	//CreatUserAddress
	//
	//  INSERT INTO addresses.addresses(user_id, street_address, city, state, country, zip_code)
	//  VALUES ($1, $2, $3, $4, $5, $6)
	//  RETURNING id, user_id, street_address, city, state, country, zip_code
	CreatUserAddress(ctx context.Context, arg CreatUserAddressParams) (AddressesAddresses, error)
	//CreateOrder
	//
	//  INSERT INTO orders.orders (email, user_id, address_id, user_currency)
	//  VALUES ($1, $2, $3, $4)
	//  RETURNING id, email, user_id, address_id, user_currency, paid, created_at, updated_at
	CreateOrder(ctx context.Context, arg CreateOrderParams) (OrdersOrders, error)
	//DeleteUserAddress
	//
	//  DELETE
	//  FROM addresses.addresses
	//  WHERE user_id = $1
	//    AND id = $2
	//  RETURNING id, user_id, street_address, city, state, country, zip_code
	DeleteUserAddress(ctx context.Context, arg DeleteUserAddressParams) (AddressesAddresses, error)
	//DeleteUserAddresses
	//
	//  DELETE
	//  FROM addresses.addresses
	//  WHERE user_id = $1
	//  RETURNING id, user_id, street_address, city, state, country, zip_code
	DeleteUserAddresses(ctx context.Context, userID string) (AddressesAddresses, error)
	//GetUserAddress
	//
	//  SELECT id, user_id, street_address, city, state, country, zip_code
	//  FROM addresses.addresses
	//  WHERE user_id = $1
	//  LIMIT 1
	GetUserAddress(ctx context.Context, userID string) (AddressesAddresses, error)
	//ListOrders
	//
	//  SELECT id, email, user_id, address_id, user_currency, paid, created_at, updated_at
	//  FROM orders.orders
	//  WHERE user_id = $1
	//  ORDER BY created_at
	ListOrders(ctx context.Context, userID string) ([]OrdersOrders, error)
	//ListUserAddresses
	//
	//  SELECT id, user_id, street_address, city, state, country, zip_code
	//  FROM addresses.addresses
	//  WHERE user_id = $1
	ListUserAddresses(ctx context.Context, userID string) ([]AddressesAddresses, error)
	//MarkOrderPaid
	//
	//  SELECT id, email, user_id, address_id, user_currency, paid, created_at, updated_at
	//  FROM orders.orders
	//  WHERE user_id = $1
	//    AND paid = true
	//  ORDER BY created_at
	MarkOrderPaid(ctx context.Context, userID string) ([]OrdersOrders, error)
	//UpdateUserAddress
	//
	//  UPDATE addresses.addresses
	//  SET street_address = coalesce($1, street_address),
	//      city           = coalesce($2, city),
	//      state          = coalesce($3, state),
	//      country        = coalesce($4, country),
	//      zip_code       = coalesce($5, zip_code)
	//  WHERE user_id = $6
	//  RETURNING id, user_id, street_address, city, state, country, zip_code
	UpdateUserAddress(ctx context.Context, arg UpdateUserAddressParams) (AddressesAddresses, error)
}

var _ Querier = (*Queries)(nil)
